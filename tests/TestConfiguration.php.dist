<?php
/**
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * This software consists of voluntary contributions made by many individuals
 * and is licensed under the MIT license.
 */

/**
 * This file defines configuration for running this module's unit tests.
 * Modules are usually located inside a ZF2 application, so a sane default
 * for ZEND_FRAMEWORK_PATH is the vendor folder in the application.
 *
 * If testing outside of a ZF2 application, do not edit this file. Instead,
 * create a TestConfiguration.php file that will be used in it's place.
 * TestConfiguration.php is ignored by git so that environment specific
 * configuration is not committed.
 *
 * Never commit plaintext passwords to the source code repository.
 */

// setup directories to search ZF2 library
$directories = array(
	__DIR__.'/../../../vendor/zendframework/zendframework/library/',
	'E:/library/zend/zendframework2/latest/library/',
	'G:/library/zend/zendframework2/latest/library/',
);

// iterate search directories
foreach ($directories as $directory) {

	// get real path
	$directory = realpath($directory);

	// check search directories exist
	if ($directory) {

		// define ZF2_PATH constant and break
		define('ZF2_PATH', $directory);
		break;
	}
}

/**
 * The bootstrap supports several more options, however most modules will
 * not need to define these.
 */

// Override the module name (usually because the namespace is something besides the root foldername)
// define('MODULE_NAME', 'SomeModuleName');

// Add additional paths where additional modules can be found
// $additionalModulePaths = array(
//     '/usr/share/lib/php/',
//     'SomeVendor' => realpath('/path/for/some/vendor/library'),
// );

// Add dependencies, for example a vendor may create several modules that all depend on a common library
// $moduleDependencies = array('SomeVendor');
